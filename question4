import '/auth/firebase_auth/auth_util.dart';
import '/backend/backend.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import '/pages/questions/question5/question5_widget.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';

import 'question4_model.dart';
export 'question4_model.dart';

class Question4Widget extends StatefulWidget {
  const Question4Widget({
    Key? key,
    this.quizRef,
    this.questionRef,
    this.progressRef,
  }) : super(key: key);

  final DocumentReference? quizRef;
  final DocumentReference? questionRef;
  final DocumentReference? progressRef;

  @override
  _Question4WidgetState createState() => _Question4WidgetState();
}

class _Question4WidgetState extends State<Question4Widget> {
  late Question4Model _model;

  final scaffoldKey = GlobalKey<ScaffoldState>();
  final _unfocusNode = FocusNode();

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => Question4Model());
  }

  @override
  void dispose() {
    _model.dispose();

    _unfocusNode.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<QuestionsRecord>(
      stream: QuestionsRecord.getDocument(widget.questionRef!),
      builder: (context, snapshot) {
        // Customize what your widget looks like when it's loading.
        if (!snapshot.hasData) {
          return Center(
            child: SizedBox(
              width: 50,
              height: 50,
              child: CircularProgressIndicator(
                color: FlutterFlowTheme.of(context).primary,
              ),
            ),
          );
        }
        final question4QuestionsRecord = snapshot.data!;
        return GestureDetector(
          onTap: () => FocusScope.of(context).requestFocus(_unfocusNode),
          child: Scaffold(
            key: scaffoldKey,
            backgroundColor: FlutterFlowTheme.of(context).primaryBackground,
            appBar: AppBar(
              backgroundColor: FlutterFlowTheme.of(context).primary,
              automaticallyImplyLeading: false,
              title: Text(
                'Question 4',
                style: FlutterFlowTheme.of(context).headlineMedium.override(
                      fontFamily: 'Outfit',
                      color: Colors.white,
                      fontSize: 22,
                    ),
              ),
              actions: [],
              centerTitle: true,
              elevation: 2,
            ),
            body: SafeArea(
              child: StreamBuilder<QuizRecord>(
                stream: QuizRecord.getDocument(widget.quizRef!),
                builder: (context, snapshot) {
                  // Customize what your widget looks like when it's loading.
                  if (!snapshot.hasData) {
                    return Center(
                      child: SizedBox(
                        width: 50,
                        height: 50,
                        child: CircularProgressIndicator(
                          color: FlutterFlowTheme.of(context).primary,
                        ),
                      ),
                    );
                  }
                  final columnQuizRecord = snapshot.data!;
                  return SingleChildScrollView(
                    primary: false,
                    child: Column(
                      mainAxisSize: MainAxisSize.max,
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      children: [
                        Padding(
                          padding:
                              EdgeInsetsDirectional.fromSTEB(20, 20, 20, 0),
                          child: StreamBuilder<List<QuestionsRecord>>(
                            stream: queryQuestionsRecord(
                              singleRecord: true,
                            ),
                            builder: (context, snapshot) {
                              // Customize what your widget looks like when it's loading.
                              if (!snapshot.hasData) {
                                return Center(
                                  child: SizedBox(
                                    width: 50,
                                    height: 50,
                                    child: CircularProgressIndicator(
                                      color:
                                          FlutterFlowTheme.of(context).primary,
                                    ),
                                  ),
                                );
                              }
                              List<QuestionsRecord> columnQuestionsRecordList =
                                  snapshot.data!;
                              // Return an empty Container when the item does not exist.
                              if (snapshot.data!.isEmpty) {
                                return Container();
                              }
                              final columnQuestionsRecord =
                                  columnQuestionsRecordList.isNotEmpty
                                      ? columnQuestionsRecordList.first
                                      : null;
                              return Builder(
                                builder: (context) {
                                  final questionLine = columnQuestionsRecord!
                                      .questionText!
                                      .toList();
                                  return Column(
                                    mainAxisSize: MainAxisSize.max,
                                    children: List.generate(questionLine.length,
                                        (questionLineIndex) {
                                      final questionLineItem =
                                          questionLine[questionLineIndex];
                                      return Text(
                                        questionLineItem,
                                        style: FlutterFlowTheme.of(context)
                                            .bodyMedium,
                                      );
                                    }),
                                  );
                                },
                              );
                            },
                          ),
                        ),
                        Padding(
                          padding: EdgeInsetsDirectional.fromSTEB(20, 0, 20, 0),
                          child: Builder(
                            builder: (context) {
                              final answerChoiceText = question4QuestionsRecord
                                  .answerChoiceText!
                                  .toList();
                              return Column(
                                mainAxisSize: MainAxisSize.max,
                                children: List.generate(answerChoiceText.length,
                                    (answerChoiceTextIndex) {
                                  final answerChoiceTextItem =
                                      answerChoiceText[answerChoiceTextIndex];
                                  return Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        5, 5, 5, 5),
                                    child: Text(
                                      answerChoiceTextItem,
                                      style: FlutterFlowTheme.of(context)
                                          .bodyMedium,
                                    ),
                                  );
                                }),
                              );
                            },
                          ),
                        ),
                        Padding(
                          padding:
                              EdgeInsetsDirectional.fromSTEB(20, 10, 20, 10),
                          child: FFButtonWidget(
                            onPressed: () async {
                              if (question4QuestionsRecord.correctAnswer ==
                                  'A') {
                                final progressUpdateData1 =
                                    createProgressRecordData(
                                  fourCorrect: true,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData1);
                                await Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                );
                              } else {
                                final progressUpdateData2 =
                                    createProgressRecordData(
                                  fourCorrect: false,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData2);
                                await Navigator.pushAndRemoveUntil(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                  (r) => false,
                                );
                              }
                            },
                            text: '(A)',
                            options: FFButtonOptions(
                              width: 130,
                              height: 40,
                              padding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              iconPadding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              color: FlutterFlowTheme.of(context).primary,
                              textStyle: FlutterFlowTheme.of(context)
                                  .titleSmall
                                  .override(
                                    fontFamily: 'Outfit',
                                    color: Colors.white,
                                  ),
                              elevation: 2,
                              borderSide: BorderSide(
                                color: Colors.transparent,
                                width: 1,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                          ),
                        ),
                        Padding(
                          padding:
                              EdgeInsetsDirectional.fromSTEB(20, 10, 20, 10),
                          child: FFButtonWidget(
                            onPressed: () async {
                              if (question4QuestionsRecord.correctAnswer ==
                                  'B') {
                                final progressUpdateData1 =
                                    createProgressRecordData(
                                  fourCorrect: true,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData1);
                                await Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                );
                              } else {
                                final progressUpdateData2 =
                                    createProgressRecordData(
                                  fourCorrect: false,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData2);
                                await Navigator.pushAndRemoveUntil(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                  (r) => false,
                                );
                              }
                            },
                            text: '(B)',
                            options: FFButtonOptions(
                              width: 130,
                              height: 40,
                              padding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              iconPadding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              color: FlutterFlowTheme.of(context).primary,
                              textStyle: FlutterFlowTheme.of(context)
                                  .titleSmall
                                  .override(
                                    fontFamily: 'Outfit',
                                    color: Colors.white,
                                  ),
                              elevation: 2,
                              borderSide: BorderSide(
                                color: Colors.transparent,
                                width: 1,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                          ),
                        ),
                        Padding(
                          padding:
                              EdgeInsetsDirectional.fromSTEB(20, 10, 20, 10),
                          child: FFButtonWidget(
                            onPressed: () async {
                              if (question4QuestionsRecord.correctAnswer ==
                                  'C') {
                                final progressUpdateData1 =
                                    createProgressRecordData(
                                  fourCorrect: true,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData1);
                                await Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                );
                              } else {
                                final progressUpdateData2 =
                                    createProgressRecordData(
                                  fourCorrect: false,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData2);
                                await Navigator.pushAndRemoveUntil(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                  (r) => false,
                                );
                              }
                            },
                            text: '(C)',
                            options: FFButtonOptions(
                              width: 130,
                              height: 40,
                              padding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              iconPadding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              color: FlutterFlowTheme.of(context).primary,
                              textStyle: FlutterFlowTheme.of(context)
                                  .titleSmall
                                  .override(
                                    fontFamily: 'Outfit',
                                    color: Colors.white,
                                  ),
                              elevation: 2,
                              borderSide: BorderSide(
                                color: Colors.transparent,
                                width: 1,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                          ),
                        ),
                        Padding(
                          padding:
                              EdgeInsetsDirectional.fromSTEB(20, 10, 20, 10),
                          child: FFButtonWidget(
                            onPressed: () async {
                              if (question4QuestionsRecord.correctAnswer ==
                                  'D') {
                                final progressUpdateData1 =
                                    createProgressRecordData(
                                  fourCorrect: true,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData1);
                                await Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                );
                              } else {
                                final progressUpdateData2 =
                                    createProgressRecordData(
                                  fourCorrect: false,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData2);
                                await Navigator.pushAndRemoveUntil(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                  (r) => false,
                                );
                              }
                            },
                            text: '(D)',
                            options: FFButtonOptions(
                              width: 130,
                              height: 40,
                              padding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              iconPadding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              color: FlutterFlowTheme.of(context).primary,
                              textStyle: FlutterFlowTheme.of(context)
                                  .titleSmall
                                  .override(
                                    fontFamily: 'Outfit',
                                    color: Colors.white,
                                  ),
                              elevation: 2,
                              borderSide: BorderSide(
                                color: Colors.transparent,
                                width: 1,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                          ),
                        ),
                        Padding(
                          padding:
                              EdgeInsetsDirectional.fromSTEB(20, 10, 20, 10),
                          child: FFButtonWidget(
                            onPressed: () async {
                              if (question4QuestionsRecord.correctAnswer ==
                                  'E') {
                                final progressUpdateData1 =
                                    createProgressRecordData(
                                  fourCorrect: true,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData1);
                                await Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                );
                              } else {
                                final progressUpdateData2 =
                                    createProgressRecordData(
                                  fourCorrect: false,
                                );
                                await widget.progressRef!
                                    .update(progressUpdateData2);
                                await Navigator.pushAndRemoveUntil(
                                  context,
                                  MaterialPageRoute(
                                    builder: (context) => Question5Widget(
                                      quizRef: widget.quizRef,
                                      questionRef: columnQuizRecord.questionID!
                                          .toList()[4],
                                      progressRef: widget.progressRef,
                                    ),
                                  ),
                                  (r) => false,
                                );
                              }
                            },
                            text: '(E)',
                            options: FFButtonOptions(
                              width: 130,
                              height: 40,
                              padding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              iconPadding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              color: FlutterFlowTheme.of(context).primary,
                              textStyle: FlutterFlowTheme.of(context)
                                  .titleSmall
                                  .override(
                                    fontFamily: 'Outfit',
                                    color: Colors.white,
                                  ),
                              elevation: 2,
                              borderSide: BorderSide(
                                color: Colors.transparent,
                                width: 1,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                          ),
                        ),
                      ],
                    ),
                  );
                },
              ),
            ),
          ),
        );
      },
    );
  }
}
